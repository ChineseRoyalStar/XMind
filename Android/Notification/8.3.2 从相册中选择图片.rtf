{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww22340\viewh13600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\b activity_main.xml:\
\

\b0 <L
\b in
\b0 earLayout android:xlmns=http://schemas.android.com/apk/res/android\
	android:orientation=\'a1\'b0vertical\'a1\'b1\
	android:layout_width=\'a1\'b0match_parent\'a1\'b1\
	android:layout_height=\'a1\'b0match_parent\'a1\'b1 >\
\
	<Button\
		android:id=\'a1\'b0@+id/take_photo\'a1\'b1\
		android:layout_width=\'a1\'b0match_parent\'a1\'b1\
		android:layout_height=\'a1\'b0wrap_content\'a1\'b1\
		android:text=\'a1\'b0Take Photo\'a1\'b1 />\
\

\b 	<Button\
		android:id=\'a1\'b0@+id/choose_from_album\'a1\'b1\
		android:layout_width=\'a1\'b0match_parent\'a1\'b1\
		android:layout_height=\'a1\'b0wrap_content\'a1\'b1\
		android:text=\'a1\'b0Choose From Album\'a1\'b1 />
\b0 \
\
	<ImageView\
		android:id=\'a1\'b0@+id/picture\'a1\'b1\
		android:layout_width=\'a1\'b0wrap_content\'a1\'b1\
		android:layout_height=\'a1\'b0wrap_content\'a1\'b1\
		android:layout_gravity=\'a1\'b0center_horizontal\'a1\'b1 />\
\
</LinearLayout>\
\
\

\b MainActivity.java:\
\

\b0 public class MainActivity extends AppCompatActivity \{\
\
	public static final int TAKE_PHOTO = 1;\
\
	
\b public static final int CHOOSE_PHOTO = 2;
\b0 \
\
	private ImageView picture;\
\
	private Uri imageUrl;\
\
	@Override\
	protected void onCreate(Bundle savedInstanceState) \{\
		super.onCreate(savedInstanceState);\
		setContentView(R.layout.activity_main);\
		Button takePhoto = (Button) findViewById(R.id.take_photo);\
		
\b Button chooseFromAlbum = (Button) findViewById(R.id.choose_from_album);
\b0 \
		\'a1\'ad\

\b 		chooseFromAlbum.setOnClickListener(new View.OnClickListener() \{\
			@Override\
			public void onClick(View v) \{\
				if (ContextCompat.checkSelfPermissoni(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) \{\
					ActivityCompat.requestPermissions(MainAcitvity.this, new String[] \{Manifest.permission.WRITE_EXTERNAL_STORAGE\}, 1);\
				\} else \{\
					openAlbum()\
				\}\
			\}\
		\});
\b0 \
	\}\
\

\b 	private void openAlbum() \{\
		Intent intent = new Intent(\'a1\'b0android.intent.action.GET_CONTENT\'a1\'b1);\
		intent.setType(\'a1\'b0image/*\'a1\'b1);\
		startActivityForResult(intent, CHOOSE_PHOTO); // \'b4\'f2\'bf\'aa\'cf\'e0\'b2\'e1\
	\}\
\
	@Override\
	public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) \{\
		switch(requestCode) \{\
			case 1:\
				if (grantResults.length > 0 && grantResults[0] ==  PackageManager.PERMISSION_GRANTED) \{\
					openAlbum();\
				\} else \{\
					Toast.makeText(this, \'a1\'b0You denied the permission\'a1\'b1, Toast.LENGTH_SHORT).show();\
				\}\
				break;\
			default:\
		\}\
	\}
\b0 \
\
	@Override\
	protected void onActivityResult(int requestCode, int resultCode, Intent data) \{\
		switch(requestCode) \{\
			\'a1\'ad\

\b 			case CHOOSE_PHOTO:\
				if (resultCode == RESULT_OK) \{\
					// \'c5\'d0\'b6\'cf\'ca\'d6\'bb\'fa\'cf\'b5\'cd\'b3\'b0\'e6\'b1\'be\'ba\'c5\
					if (Build.VERSION.SDK_INT >= 19) \{\
						// 4.4\'bc\'b0\'d2\'d4\'c9\'cf\'cf\'b5\'cd\'b3\'ca\'b9\'d3\'c3\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'b4\'a6\'c0\'ed\'cd\'bc\'c6\'ac\
						handleImageOnKitKat(data);\
					\} else \{\
						// 4.4\'d2\'d4\'cf\'c2\'cf\'b5\'cd\'b3\'ca\'b9\'d3\'c3\'d5\'e2\'b8\'f6\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'b4\'a6\'c0\'ed\'cd\'bc\'c6\'ac\
						handleImageBeforeKitKat(data);\
					\}\
				\}\
				break;
\b0 \
			default: \
				break;\
		\}\
	\}\
\

\b 	@TargetApi(19)\
	private void handleImageOnKitKat(Intent data) \{\
		String imagePath = null;\
		Uri uri = data.getData);\
		if (DocumentsContract.isDocmentUri(this, uri)) \{\
			// \'c8\'e7\'b9\'fb\'ca\'c7document\'c0\'e0\'d0\'cd\'b5\'c4Uri, \'d4\'f2\'cd\'a8\'b9\'fddocument id\'b4\'a6\'c0\'ed\
			String docId = DocumentContract.getDocumentId(uri);\
			if (\'a1\'b0com.android.providers.media.documents\'a1\'b1.equals(uri.getAuthority())) \{\
				String id = docId.split(\'a1\'b0:\'a1\'b1)[1]; // \'bd\'e2\'ce\'f6\'b3\'f6\'ca\'fd\'d7\'d6\'b8\'f1\'ca\'bd\'b5\'c4id\
				String selection = MediaStore.Images.Media._ID + \'a1\'b0=\'a1\'b1 + id;\
				imagePath = getImagePath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, selection);\
			\} else if (\'a1\'b0com.android.providers.downloads.documents\'a1\'b1.equals(uri.getAuthority())) \{\
				Uri contentUri = ContentUris.withAppendedId(Uri.parse(\'a1\'b0content://downloads/public_downloads\'a1\'b1), Long.valueOf(docId));\
				imagePath = getImagePath(contentUri, null);\
			\}\
		\} else if (\'a1\'b0content\'a1\'b1.equalsIgnoreCase(uri.getScheme())) \{\
			// \'c8\'e7\'b9\'fb\'ca\'c7content\'c0\'e0\'d0\'cd\'b5\'c4uri, \'d4\'f2\'ca\'b9\'d3\'c3\'c6\'d5\'cd\'a8\'b7\'bd\'ca\'bd\'b4\'a6\'c0\'ed\
			imagePath = getImagePath(uri, null);	\
		\} else if (\'a1\'b0file\'a1\'b1.equalIgnoreCase(uri.getScheme())) \{\
			// \'c8\'e7\'b9\'fb\'ca\'c7file\'c0\'e0\'d0\'cd\'b5\'c4Uri, \'d6\'b1\'bd\'d3\'bb\'f1\'c8\'a1\'cd\'bc\'c6\'ac\'c2\'b7\'be\'b6\'bc\'b4\'bf\'c9\
			imagePath = getPath();\
		\}\
		displayImage(imagePath); // \'b8\'f9\'be\'dd\'cd\'bc\'c6\'ac\'c2\'b7\'be\'b6\'cf\'d4\'ca\'be\'cd\'bc\'c6\'ac\
	\}\
	\
	private void handleImageBeforeKitKat(Intent data) \{\
		Uri uri = data.getData();\
		String imagePath = getImagePath(uri, null);\
		displayImage(imagePath);\
	\}\
\
	private String getImagePath(Uri uri, String selection) \{\
		String path = null;\
		// \'cd\'a8\'b9\'fdUri\'ba\'cdselection\'c0\'b4\'bb\'f1\'c8\'a1\'d5\'e6\'ca\'b5\'b5\'c4\'cd\'bc\'c6\'ac\'c2\'b7\'be\'b6\
		Cursor cursor = getContentResolver().query(uri, null, selection, null, null);\
		if (cursor != null) \{\
			if (cursor.moveToFirst()) \{\
				path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));\
			\}\
			cursor.close();\
		\}\
		return path;\
	\}\
\
	private void displayImage(String imagePath) \{\
		if (imagePath != null) \{\
			Bitmap bitmap = BitmapFactory.decodeFile(imagePath);\
			picture.setImageBitmap(bitmap);\
		\} else \{\
			Toast.makeText(this, \'a1\'b0failed to get image\'a1\'b1, Toast.LENGTH_SHORT).show();\
		\}\
	\}
\b0 \
\}\
}